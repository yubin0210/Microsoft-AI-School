{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import os, sys\n",
        "print(os.getcwd())\n",
        "current_dir = os.path.dirname(os.getcwd())\n",
        "print(current_dir)\n",
        "os.chdir(current_dir)\n",
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from dataset.mnist import load_mnist\n",
        "from common.multi_layer_net_extend import MultiLayerNetExtend\n",
        "from common.optimizer import SGD, Adam\n",
        "\n",
        "(x_train, t_train), (x_test, t_test) = load_mnist(normalize=True)\n",
        "\n",
        "# 학습 데이터를 줄임\n",
        "x_train = x_train[:1000]\n",
        "t_train = t_train[:1000]\n",
        "\n",
        "max_epochs = 20\n",
        "train_size = x_train.shape[0]\n",
        "batch_size = 100\n",
        "learning_rate = 0.01\n",
        "\n",
        "\n",
        "def __train(weight_init_std):\n",
        "    bn_network = MultiLayerNetExtend(input_size=784, hidden_size_list=[100, 100, 100, 100, 100], output_size=10, \n",
        "                                    weight_init_std=weight_init_std, use_batchnorm=True)\n",
        "    network = MultiLayerNetExtend(input_size=784, hidden_size_list=[100, 100, 100, 100, 100], output_size=10,\n",
        "                                weight_init_std=weight_init_std)\n",
        "    optimizer = SGD(lr=learning_rate)\n",
        "    \n",
        "    train_acc_list = []\n",
        "    bn_train_acc_list = []\n",
        "    \n",
        "    iter_per_epoch = max(train_size / batch_size, 1)\n",
        "    epoch_cnt = 0\n",
        "    \n",
        "    for i in range(1000000000):\n",
        "        batch_mask = np.random.choice(train_size, batch_size)\n",
        "        x_batch = x_train[batch_mask]\n",
        "        t_batch = t_train[batch_mask]\n",
        "    \n",
        "        for _network in (bn_network, network):\n",
        "            grads = _network.gradient(x_batch, t_batch)\n",
        "            optimizer.update(_network.params, grads)\n",
        "    \n",
        "        if i % iter_per_epoch == 0:\n",
        "            train_acc = network.accuracy(x_train, t_train)\n",
        "            bn_train_acc = bn_network.accuracy(x_train, t_train)\n",
        "            train_acc_list.append(train_acc)\n",
        "            bn_train_acc_list.append(bn_train_acc)\n",
        "    \n",
        "            print(\"epoch:\" + str(epoch_cnt) + \" | \" + str(train_acc) + \" - \" + str(bn_train_acc))\n",
        "    \n",
        "            epoch_cnt += 1\n",
        "            if epoch_cnt >= max_epochs:\n",
        "                break\n",
        "                \n",
        "    return train_acc_list, bn_train_acc_list\n",
        "\n",
        "\n",
        "# 그래프 그리기==========\n",
        "weight_scale_list = np.logspace(0, -4, num=16)\n",
        "x = np.arange(max_epochs)\n",
        "\n",
        "for i, w in enumerate(weight_scale_list):\n",
        "    print( \"============== \" + str(i+1) + \"/16\" + \" ==============\")\n",
        "    train_acc_list, bn_train_acc_list = __train(w)\n",
        "    \n",
        "    plt.subplot(4,4,i+1)\n",
        "    plt.title(\"W:\" + str(w))\n",
        "    if i == 15:\n",
        "        plt.plot(x, bn_train_acc_list, label='Batch Normalization', markevery=2)\n",
        "        plt.plot(x, train_acc_list, linestyle = \"--\", label='Normal(without BatchNorm)', markevery=2)\n",
        "    else:\n",
        "        plt.plot(x, bn_train_acc_list, markevery=2)\n",
        "        plt.plot(x, train_acc_list, linestyle=\"--\", markevery=2)\n",
        "\n",
        "    plt.ylim(0, 1.0)\n",
        "    if i % 4:\n",
        "        plt.yticks([])\n",
        "    else:\n",
        "        plt.ylabel(\"accuracy\")\n",
        "    if i < 12:\n",
        "        plt.xticks([])\n",
        "    else:\n",
        "        plt.xlabel(\"epochs\")\n",
        "    plt.legend(loc='lower right')\n",
        "    \n",
        "plt.show()\n"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "/mnt/batch/tasks/shared/LS_root/mounts/clusters/el202/code/Users/el20/DL/ch05\n/mnt/batch/tasks/shared/LS_root/mounts/clusters/el202/code/Users/el20/DL\n============== 1/16 ==============\nepoch:0 | 0.105 - 0.099\nepoch:1 | 0.097 - 0.098\nepoch:2 | 0.097 - 0.138\nepoch:3 | 0.097 - 0.173\nepoch:4 | 0.097 - 0.2\nepoch:5 | 0.097 - 0.215\nepoch:6 | 0.097 - 0.24\nepoch:7 | 0.097 - 0.269\nepoch:8 | 0.097 - 0.28\nepoch:9 | 0.097 - 0.306\nepoch:10 | 0.097 - 0.329\nepoch:11 | 0.097 - 0.337\nepoch:12 | 0.097 - 0.355\nepoch:13 | 0.097 - 0.373\nepoch:14 | 0.097 - 0.386\nepoch:15 | 0.097 - 0.393\nepoch:16 | 0.097 - 0.406\nepoch:17 | 0.097 - 0.422\nepoch:18 | 0.097 - 0.425\nepoch:19 | 0.097 - 0.44\n============== 2/16 ==============\nepoch:0 | 0.092 - 0.06\nepoch:1 | 0.097 - 0.078\nepoch:2 | 0.097 - 0.094\nepoch:3 | 0.097 - 0.118\nepoch:4 | 0.097 - 0.13\nepoch:5 | 0.097 - 0.155\nepoch:6 | 0.097 - 0.178\nepoch:7 | 0.097 - 0.211\nepoch:8 | 0.097 - 0.231\nepoch:9 | 0.097 - 0.257\nepoch:10 | 0.097 - 0.28\nepoch:11 | 0.097 - 0.299\nepoch:12 | 0.097 - 0.322\nepoch:13 | 0.097 - 0.347\nepoch:14 | 0.097 - 0.359\nepoch:15 | 0.097 - 0.387\nepoch:16 | 0.097 - 0.405\nepoch:17 | 0.097 - 0.413\nepoch:18 | 0.097 - 0.435\nepoch:19 | 0.097 - 0.459\n============== 3/16 ==============\nepoch:0 | 0.137 - 0.108\nepoch:1 | 0.409 - 0.105\nepoch:2 | 0.516 - 0.132\nepoch:3 | 0.618 - 0.169\nepoch:4 | 0.722 - 0.216\nepoch:5 | 0.763 - 0.262\nepoch:6 | 0.791 - 0.294\nepoch:7 | 0.843 - 0.332\nepoch:8 | 0.863 - 0.382\nepoch:9 | 0.896 - 0.411\nepoch:10 | 0.934 - 0.438\nepoch:11 | 0.944 - 0.45\nepoch:12 | 0.947 - 0.483\nepoch:13 | 0.969 - 0.509\nepoch:14 | 0.978 - 0.541\nepoch:15 | 0.978 - 0.547\nepoch:16 | 0.981 - 0.563\nepoch:17 | 0.984 - 0.586\nepoch:18 | 0.986 - 0.6\nepoch:19 | 0.989 - 0.617\n============== 4/16 ==============\nepoch:0 | 0.101 - 0.076\nepoch:1 | 0.275 - 0.152\nepoch:2 | 0.404 - 0.236\nepoch:3 | 0.502 - 0.317\nepoch:4 | 0.582 - 0.393\nepoch:5 | 0.635 - 0.454\nepoch:6 | 0.684 - 0.49\nepoch:7 | 0.713 - 0.527\nepoch:8 | 0.746 - 0.553\nepoch:9 | 0.748 - 0.591\nepoch:10 | 0.778 - 0.62\nepoch:11 | 0.796 - 0.649\nepoch:12 | 0.806 - 0.668\nepoch:13 | 0.827 - 0.697\nepoch:14 | 0.829 - 0.723\nepoch:15 | 0.833 - 0.738\nepoch:16 | 0.849 - 0.755\nepoch:17 | 0.85 - 0.762\nepoch:18 | 0.861 - 0.783\nepoch:19 | 0.866 - 0.798\n============== 5/16 ==============\nepoch:0 | 0.1 - 0.101\nepoch:1 | 0.104 - 0.194\nepoch:2 | 0.11 - 0.332\nepoch:3 | 0.113 - 0.456\nepoch:4 | 0.127 - 0.54\nepoch:5 | 0.137 - 0.607\nepoch:6 | 0.143 - 0.65\nepoch:7 | 0.143 - 0.693\nepoch:8 | 0.147 - 0.729\nepoch:9 | 0.155 - 0.759\nepoch:10 | 0.158 - 0.781\nepoch:11 | 0.173 - 0.794\nepoch:12 | 0.196 - 0.817\nepoch:13 | 0.195 - 0.828\nepoch:14 | 0.201 - 0.841\nepoch:15 | 0.204 - 0.851\nepoch:16 | 0.212 - 0.858\nepoch:17 | 0.223 - 0.872\nepoch:18 | 0.242 - 0.883\nepoch:19 | 0.252 - 0.887\n============== 6/16 ==============\nepoch:0 | 0.129 - 0.106\nepoch:1 | 0.117 - 0.259\nepoch:2 | 0.117 - 0.481\nepoch:3 | 0.117 - 0.591\nepoch:4 | 0.117 - 0.651\nepoch:5 | 0.117 - 0.712\nepoch:6 | 0.117 - 0.76\nepoch:7 | 0.117 - 0.786\nepoch:8 | 0.117 - 0.813\nepoch:9 | 0.117 - 0.834\nepoch:10 | 0.117 - 0.85\nepoch:11 | 0.117 - 0.869\nepoch:12 | 0.117 - 0.875\nepoch:13 | 0.117 - 0.888\nepoch:14 | 0.117 - 0.902\nepoch:15 | 0.117 - 0.914\nepoch:16 | 0.117 - 0.92\nepoch:17 | 0.117 - 0.933\nepoch:18 | 0.117 - 0.936\nepoch:19 | 0.117 - 0.942\n============== 7/16 ==============\nepoch:0 | 0.116 - 0.13\nepoch:1 | 0.117 - 0.161\nepoch:2 | 0.116 - 0.471\nepoch:3 | 0.116 - 0.712\nepoch:4 | 0.116 - 0.772\nepoch:5 | 0.116 - 0.81\nepoch:6 | 0.116 - 0.848\nepoch:7 | 0.116 - 0.861\nepoch:8 | 0.116 - 0.893\nepoch:9 | 0.116 - 0.899\nepoch:10 | 0.116 - 0.92\nepoch:11 | 0.116 - 0.93\nepoch:12 | 0.116 - 0.939\nepoch:13 | 0.116 - 0.957\nepoch:14 | 0.116 - 0.968\nepoch:15 | 0.116 - 0.969\nepoch:16 | 0.116 - 0.978\nepoch:17 | 0.116 - 0.984\nepoch:18 | 0.116 - 0.99\nepoch:19 | 0.116 - 0.992\n============== 8/16 ==============\nepoch:0 | 0.087 - 0.106\nepoch:1 | 0.116 - 0.438\nepoch:2 | 0.116 - 0.657\nepoch:3 | 0.116 - 0.771\nepoch:4 | 0.116 - 0.803\nepoch:5 | 0.116 - 0.82\nepoch:6 | 0.117 - 0.847\nepoch:7 | 0.116 - 0.875\nepoch:8 | 0.116 - 0.89\nepoch:9 | 0.117 - 0.908\nepoch:10 | 0.117 - 0.934\nepoch:11 | 0.117 - 0.97\nepoch:12 | 0.116 - 0.991\nepoch:13 | 0.117 - 0.991\nepoch:14 | 0.116 - 0.996\nepoch:15 | 0.116 - 0.997\nepoch:16 | 0.116 - 0.997\nepoch:17 | 0.116 - 0.997\nepoch:18 | 0.116 - 0.998\nepoch:19 | 0.117 - 0.997\n============== 9/16 ==============\nepoch:0 | 0.105 - 0.089\nepoch:1 | 0.117 - 0.396\nepoch:2 | 0.117 - 0.689\nepoch:3 | 0.116 - 0.823\nepoch:4 | 0.116 - 0.883\nepoch:5 | 0.116 - 0.922\nepoch:6 | 0.116 - 0.959\nepoch:7 | 0.116 - 0.973\nepoch:8 | 0.117 - 0.986\nepoch:9 | 0.116 - 0.99\nepoch:10 | 0.117 - 0.997\nepoch:11 | 0.117 - 0.997\nepoch:12 | 0.117 - 0.997\nepoch:13 | 0.117 - 0.998\nepoch:14 | 0.117 - 0.998\nepoch:15 | 0.117 - 0.998\nepoch:16 | 0.117 - 0.998\nepoch:17 | 0.117 - 0.998\nepoch:18 | 0.117 - 0.998\nepoch:19 | 0.117 - 0.998\n============== 10/16 ==============\nepoch:0 | 0.1 - 0.102\nepoch:1 | 0.117 - 0.65\nepoch:2 | 0.117 - 0.742\nepoch:3 | 0.117 - 0.81\nepoch:4 | 0.117 - 0.835\nepoch:5 | 0.117 - 0.88\nepoch:6 | 0.117 - 0.945\nepoch:7 | 0.117 - 0.938\nepoch:8 | 0.117 - 0.975\nepoch:9 | 0.117 - 0.984\nepoch:10 | 0.117 - 0.991\nepoch:11 | 0.117 - 0.994\nepoch:12 | 0.117 - 0.998\nepoch:13 | 0.117 - 0.999\nepoch:14 | 0.117 - 0.998\nepoch:15 | 0.117 - 0.998\nepoch:16 | 0.117 - 0.999\nepoch:17 | 0.117 - 0.998\nepoch:18 | 0.117 - 0.999\nepoch:19 | 0.117 - 0.998\n============== 11/16 ==============\nepoch:0 | 0.099 - 0.193\nepoch:1 | 0.105 - 0.56\nepoch:2 | 0.105 - 0.526\nepoch:3 | 0.116 - 0.729\nepoch:4 | 0.116 - 0.755\nepoch:5 | 0.117 - 0.781\nepoch:6 | 0.116 - 0.788\nepoch:7 | 0.116 - 0.787\nepoch:8 | 0.116 - 0.796\nepoch:9 | 0.116 - 0.752\nepoch:10 | 0.116 - 0.811\nepoch:11 | 0.117 - 0.737\nepoch:12 | 0.116 - 0.81\nepoch:13 | 0.117 - 0.812\nepoch:14 | 0.117 - 0.813\nepoch:15 | 0.117 - 0.81\nepoch:16 | 0.116 - 0.806\nepoch:17 | 0.117 - 0.807\nepoch:18 | 0.117 - 0.811\nepoch:19 | 0.117 - 0.811\n============== 12/16 ==============\nepoch:0 | 0.117 - 0.162\nepoch:1 | 0.117 - 0.384\nepoch:2 | 0.117 - 0.443\nepoch:3 | 0.117 - 0.579\nepoch:4 | 0.117 - 0.602\nepoch:5 | 0.117 - 0.618\nepoch:6 | 0.117 - 0.629\nepoch:7 | 0.117 - 0.619\nepoch:8 | 0.117 - 0.758\nepoch:9 | 0.117 - 0.794\nepoch:10 | 0.117 - 0.787\nepoch:11 | 0.117 - 0.776\nepoch:12 | 0.117 - 0.799\nepoch:13 | 0.117 - 0.886\nepoch:14 | 0.117 - 0.897\nepoch:15 | 0.117 - 0.902\nepoch:16 | 0.117 - 0.889\nepoch:17 | 0.117 - 0.902\nepoch:18 | 0.117 - 0.9\nepoch:19 | 0.117 - 0.89\n============== 13/16 ==============\nepoch:0 | 0.117 - 0.234\nepoch:1 | 0.117 - 0.373\nepoch:2 | 0.117 - 0.545\nepoch:3 | 0.117 - 0.585\nepoch:4 | 0.116 - 0.612\nepoch:5 | 0.116 - 0.677\nepoch:6 | 0.116 - 0.764\nepoch:7 | 0.116 - 0.723\nepoch:8 | 0.116 - 0.737\nepoch:9 | 0.116 - 0.764\nepoch:10 | 0.116 - 0.77\nepoch:11 | 0.116 - 0.787\nepoch:12 | 0.116 - 0.799\nepoch:13 | 0.116 - 0.792\nepoch:14 | 0.116 - 0.803\nepoch:15 | 0.116 - 0.796\nepoch:16 | 0.116 - 0.789\nepoch:17 | 0.116 - 0.808\nepoch:18 | 0.116 - 0.802\nepoch:19 | 0.116 - 0.807\n============== 14/16 ==============\nepoch:0 | 0.117 - 0.101\nepoch:1 | 0.116 - 0.262\nepoch:2 | 0.116 - 0.444\nepoch:3 | 0.116 - 0.473\nepoch:4 | 0.117 - 0.467\nepoch:5 | 0.116 - 0.489\nepoch:6 | 0.116 - 0.509\nepoch:7 | 0.116 - 0.499\nepoch:8 | 0.116 - 0.52\nepoch:9 | 0.116 - 0.508\nepoch:10 | 0.116 - 0.364\nepoch:11 | 0.116 - 0.501\nepoch:12 | 0.116 - 0.512\nepoch:13 | 0.116 - 0.516\nepoch:14 | 0.116 - 0.519\nepoch:15 | 0.116 - 0.519\nepoch:16 | 0.116 - 0.521\nepoch:17 | 0.116 - 0.524\nepoch:18 | 0.116 - 0.524\nepoch:19 | 0.117 - 0.523\n============== 15/16 ==============\nepoch:0 | 0.117 - 0.111\nepoch:1 | 0.117 - 0.298\nepoch:2 | 0.117 - 0.301\nepoch:3 | 0.117 - 0.308\nepoch:4 | 0.117 - 0.304\nepoch:5 | 0.117 - 0.401\nepoch:6 | 0.117 - 0.412\nepoch:7 | 0.116 - 0.407\nepoch:8 | 0.117 - 0.379\nepoch:9 | 0.116 - 0.399\nepoch:10 | 0.116 - 0.401\nepoch:11 | 0.116 - 0.416\nepoch:12 | 0.116 - 0.412\nepoch:13 | 0.117 - 0.422\nepoch:14 | 0.116 - 0.419\nepoch:15 | 0.116 - 0.423\nepoch:16 | 0.116 - 0.424\nepoch:17 | 0.116 - 0.423\nepoch:18 | 0.116 - 0.425\nepoch:19 | 0.116 - 0.427\n============== 16/16 ==============\nepoch:0 | 0.116 - 0.113\nepoch:1 | 0.116 - 0.218\nepoch:2 | 0.116 - 0.354\nepoch:3 | 0.116 - 0.316\nepoch:4 | 0.116 - 0.37\nepoch:5 | 0.116 - 0.406\nepoch:6 | 0.116 - 0.423\nepoch:7 | 0.116 - 0.426\nepoch:8 | 0.116 - 0.427\nepoch:9 | 0.116 - 0.429\nepoch:10 | 0.116 - 0.428\nepoch:11 | 0.116 - 0.43\nepoch:12 | 0.116 - 0.503\nepoch:13 | 0.116 - 0.514\nepoch:14 | 0.116 - 0.506\nepoch:15 | 0.116 - 0.509\nepoch:16 | 0.116 - 0.445\n"
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "/mnt/batch/tasks/shared/LS_root/mounts/clusters/el202/code/Users/el20/DL/common/multi_layer_net_extend.py:104: RuntimeWarning: overflow encountered in square\n  weight_decay += 0.5 * self.weight_decay_lambda * np.sum(W**2)\n/mnt/batch/tasks/shared/LS_root/mounts/clusters/el202/code/Users/el20/DL/common/multi_layer_net_extend.py:104: RuntimeWarning: invalid value encountered in scalar multiply\n  weight_decay += 0.5 * self.weight_decay_lambda * np.sum(W**2)\n/tmp/ipykernel_29068/1852129665.py:88: UserWarning: No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n  plt.legend(loc='lower right')\n/mnt/batch/tasks/shared/LS_root/mounts/clusters/el202/code/Users/el20/DL/common/functions.py:34: RuntimeWarning: invalid value encountered in subtract\n  x = x - np.max(x, axis=0)\n"
        }
      ],
      "execution_count": 1,
      "metadata": {}
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python310-sdkv2",
      "language": "python",
      "display_name": "Python 3.10 - SDK v2"
    },
    "language_info": {
      "name": "python",
      "version": "3.10.14",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "kernel_info": {
      "name": "python310-sdkv2"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}